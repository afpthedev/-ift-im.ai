{"ast":null,"code":"var _jsxFileName = \"/home/user/-ift-im.ai/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport { BrowserRouter, Routes, Route, NavLink } from 'react-router-dom';\nimport 'leaflet/dist/leaflet.css';\nimport turkeyGeoJson from './turkey-provinces.json';\nimport About from './About'; // Eğer About.js’iniz yoksa bu satırı kaldırın\n\n// English -> Turkish map\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cropMap = {\n  rice: 'Pirinç',\n  maize: 'Mısır',\n  chickpea: 'Nohut',\n  kidneybeans: 'Barbunya',\n  pigeonpeas: 'Bezelye',\n  mungbean: 'Mung Fasulyesi',\n  blackgram: 'Kara Fasulye',\n  lentil: 'Mercimek',\n  pomegranate: 'Nar',\n  banana: 'Muz',\n  mango: 'Mango',\n  grapes: 'Üzüm',\n  watermelon: 'Karpuz',\n  coconut: 'Hindistan Cevizi',\n  cotton: 'Pamuk',\n  muskmelon: 'Kavun',\n  apple: 'Elma'\n};\n\n// LabelEncoder.classes_ (alphabetical) -> index mapping\nconst cropClasses = ['apple', 'banana', 'blackgram', 'chickpea', 'grapes', 'kidneybeans', 'lentil', 'maize', 'mango', 'muskmelon', 'coconut', 'cotton', 'pomegranate', 'rice', 'watermelon'];\nfunction App() {\n  _s();\n  const [provinces, setProvinces] = useState([]);\n  const [selectedProvince, setSelectedProvince] = useState(null);\n  const [provinceData, setProvinceData] = useState(null);\n  const [loadingProvince, setLoadingProvince] = useState(false);\n  const [errorProvince, setErrorProvince] = useState(null);\n  const [systemStatus, setSystemStatus] = useState({});\n  const [accuracy, setAccuracy] = useState(null);\n  const [predictForm, setPredictForm] = useState({\n    soil_ph: '',\n    rainfall_mm: '',\n    temperature_celsius: ''\n  });\n  const [predictResult, setPredictResult] = useState(null);\n  const [predictLoading, setPredictLoading] = useState(false);\n  const [predictError, setPredictError] = useState(null);\n\n  // Fetch provinces and system status\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/provinces').then(res => setProvinces(res.data)).catch(err => console.error('İller yüklenirken hata:', err));\n    Promise.all([axios.get('http://localhost:5000/api/health'), axios.get('http://localhost:5000/api/hadoop/status'), axios.get('http://localhost:5000/api/accuracy')]).then(([healthRes, hadoopRes, accRes]) => {\n      setSystemStatus({\n        api: healthRes.data,\n        hadoop: hadoopRes.data\n      });\n      setAccuracy(accRes.data.accuracy);\n    }).catch(err => {\n      console.error('Sistem durumu yüklenirken hata:', err);\n      setSystemStatus({\n        error: 'Sistem durumu alınamadı'\n      });\n    });\n  }, []);\n\n  // Fetch selected province data\n  useEffect(() => {\n    if (!selectedProvince) return;\n    setLoadingProvince(true);\n    axios.get(`http://localhost:5000/api/province/${selectedProvince}`).then(res => {\n      setProvinceData(res.data);\n      setErrorProvince(null);\n    }).catch(err => {\n      console.error('İl verisi yüklenirken hata:', err);\n      setErrorProvince('İl verisi yüklenirken hata oluştu');\n    }).finally(() => setLoadingProvince(false));\n  }, [selectedProvince]);\n  const handleProvinceSelect = e => {\n    setSelectedProvince(e.target.value);\n    setProvinceData(null);\n  };\n  const handlePredictInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPredictForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handlePredictSubmit = e => {\n    e.preventDefault();\n    const {\n      soil_ph,\n      rainfall_mm,\n      temperature_celsius\n    } = predictForm;\n    if (!soil_ph || !rainfall_mm || !temperature_celsius) {\n      setPredictError('Lütfen tüm alanları doldurun');\n      return;\n    }\n    setPredictLoading(true);\n    axios.post('http://localhost:5000/api/predict', {\n      soil_ph: parseFloat(soil_ph),\n      rainfall_mm: parseFloat(rainfall_mm),\n      temperature_celsius: parseFloat(temperature_celsius)\n    }).then(res => {\n      setPredictResult(res.data);\n      setPredictError(null);\n    }).catch(err => {\n      console.error('Predict error:', err);\n      setPredictError('Tahmin başarısız');\n    }).finally(() => setPredictLoading(false));\n  };\n  const resetPredictForm = () => {\n    setPredictForm({\n      soil_ph: '',\n      rainfall_mm: '',\n      temperature_celsius: ''\n    });\n    setPredictResult(null);\n    setPredictError(null);\n  };\n  const provinceStyle = feature => ({\n    fillColor: selectedProvince == feature.properties.id ? '#4CAF50' : '#3388ff',\n    weight: 2,\n    opacity: 1,\n    color: 'white',\n    dashArray: '3',\n    fillOpacity: 0.7\n  });\n  const onEachFeature = (feature, layer) => {\n    layer.on({\n      click: () => setSelectedProvince(feature.properties.id)\n    });\n    layer.bindTooltip(feature.properties.name);\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Tar\\u0131m Tahmin Uygulamas\\u0131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"T\\xFCrkiye haritas\\u0131ndan bir il se\\xE7erek verileri g\\xF6r\\xFCnt\\xFCleyin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"main-nav\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/\",\n              exact: true,\n              activeClassName: \"active\",\n              children: \"Ana Sayfa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/about\",\n              activeClassName: \"active\",\n              children: \"Bu Proje Ne \\u0130\\u015Fe Yarar?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"map-container\",\n              children: /*#__PURE__*/_jsxDEV(MapContainer, {\n                center: [39, 35],\n                zoom: 6,\n                style: {\n                  height: '400px',\n                  width: '100%'\n                },\n                children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n                  url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n                  data: turkeyGeoJson,\n                  style: provinceStyle,\n                  onEachFeature: onEachFeature\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"data-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"province-selector\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"\\u0130l Se\\xE7imi\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  onChange: handleProvinceSelect,\n                  value: selectedProvince || '',\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"-- Se\\xE7iniz --\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 21\n                  }, this), provinces.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: p.province_id,\n                    children: p.province_name\n                  }, p.province_id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 23\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), loadingProvince && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Y\\xFCkleniyor...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 37\n              }, this), errorProvince && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error\",\n                children: errorProvince\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 35\n              }, this), provinceData && !loadingProvince && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"province-data\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [provinceData.province_name, \" \\u0130li Verileri\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"data-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Toprak pH:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 28\n                    }, this), \" \", provinceData.soil_ph]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Ya\\u011F\\u0131\\u015F (mm):\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 28\n                    }, this), \" \", provinceData.rainfall_mm]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"S\\u0131cakl\\u0131k (\\xB0C):\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 28\n                    }, this), \" \", provinceData.temperature_celsius]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"prediction-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"\\xD6nerilen \\xDCr\\xFCn\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 23\n                  }, this), (() => {\n                    const idx = provinceData.recommended_crop;\n                    const label = cropClasses[idx];\n                    return /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"prediction\",\n                      children: cropMap[label] || label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 32\n                    }, this);\n                  })()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"predict-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Manuel Tahmin Yap\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: handlePredictSubmit,\n                  className: \"predict-form\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"soil_ph\",\n                      children: \"Toprak pH:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"soil_ph\",\n                      name: \"soil_ph\",\n                      type: \"number\",\n                      step: \"0.1\",\n                      placeholder: \"\\xD6rnek: 6.5\",\n                      value: predictForm.soil_ph,\n                      onChange: handlePredictInputChange,\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"rainfall_mm\",\n                      children: \"Ya\\u011F\\u0131\\u015F (mm):\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"rainfall_mm\",\n                      name: \"rainfall_mm\",\n                      type: \"number\",\n                      step: \"0.1\",\n                      placeholder: \"\\xD6rnek: 500\",\n                      value: predictForm.rainfall_mm,\n                      onChange: handlePredictInputChange,\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: \"temperature_celsius\",\n                      children: \"S\\u0131cakl\\u0131k (\\xB0C):\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"temperature_celsius\",\n                      name: \"temperature_celsius\",\n                      type: \"number\",\n                      step: \"0.1\",\n                      placeholder: \"\\xD6rnek: 25\",\n                      value: predictForm.temperature_celsius,\n                      onChange: handlePredictInputChange,\n                      required: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-buttons\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      disabled: predictLoading,\n                      className: \"predict-button\",\n                      children: predictLoading ? 'Tahmin Yapılıyor...' : 'Tahmin Yap'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 225,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"button\",\n                      onClick: resetPredictForm,\n                      className: \"reset-button\",\n                      children: \"Temizle\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this), predictError && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"error\",\n                  children: predictError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 36\n                }, this), predictResult && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"predict-result\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Tahmin Sonucu\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 23\n                  }, this), (() => {\n                    const idx = predictResult.predicted_crop;\n                    const label = cropClasses[idx];\n                    return /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: \"\\xD6nerilen \\xDCr\\xFCn:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 238,\n                        columnNumber: 35\n                      }, this), \" \", cropMap[label] || label]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 32\n                    }, this);\n                  })(), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-summary\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"Girilen De\\u011Ferler:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"pH: \", predictResult.input.soil_ph]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Ya\\u011F\\u0131\\u015F: \", predictResult.input.rainfall_mm, \" mm\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"S\\u0131cakl\\u0131k: \", predictResult.input.temperature_celsius, \" \\xB0C\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"App-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Hadoop, Spark, Flask & React ile Tar\\u0131m Tahmin \\xA9 2025\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4YmJiPeJhk7ynVzyL2RchNT4iQE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","MapContainer","TileLayer","GeoJSON","BrowserRouter","Routes","Route","NavLink","turkeyGeoJson","About","jsxDEV","_jsxDEV","cropMap","rice","maize","chickpea","kidneybeans","pigeonpeas","mungbean","blackgram","lentil","pomegranate","banana","mango","grapes","watermelon","coconut","cotton","muskmelon","apple","cropClasses","App","_s","provinces","setProvinces","selectedProvince","setSelectedProvince","provinceData","setProvinceData","loadingProvince","setLoadingProvince","errorProvince","setErrorProvince","systemStatus","setSystemStatus","accuracy","setAccuracy","predictForm","setPredictForm","soil_ph","rainfall_mm","temperature_celsius","predictResult","setPredictResult","predictLoading","setPredictLoading","predictError","setPredictError","get","then","res","data","catch","err","console","error","Promise","all","healthRes","hadoopRes","accRes","api","hadoop","finally","handleProvinceSelect","e","target","value","handlePredictInputChange","name","prev","handlePredictSubmit","preventDefault","post","parseFloat","resetPredictForm","provinceStyle","feature","fillColor","properties","id","weight","opacity","color","dashArray","fillOpacity","onEachFeature","layer","on","click","bindTooltip","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","exact","activeClassName","path","element","center","zoom","style","height","width","url","onChange","map","p","province_id","province_name","idx","recommended_crop","label","onSubmit","htmlFor","type","step","placeholder","required","disabled","onClick","predicted_crop","input","_c","$RefreshReg$"],"sources":["/home/user/-ift-im.ai/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport { BrowserRouter, Routes, Route, NavLink } from 'react-router-dom';\nimport 'leaflet/dist/leaflet.css';\nimport turkeyGeoJson from './turkey-provinces.json';\nimport About from './About'; // Eğer About.js’iniz yoksa bu satırı kaldırın\n\n\n// English -> Turkish map\nconst cropMap = {\n  rice: 'Pirinç',\n  maize: 'Mısır',\n  chickpea: 'Nohut',\n  kidneybeans: 'Barbunya',\n  pigeonpeas: 'Bezelye',\n  mungbean: 'Mung Fasulyesi',\n  blackgram: 'Kara Fasulye',\n  lentil: 'Mercimek',\n  pomegranate: 'Nar',\n  banana: 'Muz',\n  mango: 'Mango',\n  grapes: 'Üzüm',\n  watermelon: 'Karpuz',\n  coconut: 'Hindistan Cevizi',\n  cotton: 'Pamuk',\n  muskmelon: 'Kavun',\n  apple: 'Elma'\n};\n\n// LabelEncoder.classes_ (alphabetical) -> index mapping\nconst cropClasses = [\n  'apple', 'banana', 'blackgram', 'chickpea', 'grapes',\n  'kidneybeans', 'lentil', 'maize', 'mango', 'muskmelon', 'coconut', 'cotton',\n  'pomegranate', 'rice', 'watermelon'\n];\n\nfunction App() {\n  const [provinces, setProvinces] = useState([]);\n  const [selectedProvince, setSelectedProvince] = useState(null);\n  const [provinceData, setProvinceData] = useState(null);\n  const [loadingProvince, setLoadingProvince] = useState(false);\n  const [errorProvince, setErrorProvince] = useState(null);\n  const [systemStatus, setSystemStatus] = useState({});\n  const [accuracy, setAccuracy] = useState(null);\n\n\n  const [predictForm, setPredictForm] = useState({ soil_ph: '', rainfall_mm: '', temperature_celsius: '' });\n  const [predictResult, setPredictResult] = useState(null);\n  const [predictLoading, setPredictLoading] = useState(false);\n  const [predictError, setPredictError] = useState(null);\n\n  // Fetch provinces and system status\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/provinces')\n      .then(res => setProvinces(res.data))\n      .catch(err => console.error('İller yüklenirken hata:', err));\n\n    Promise.all([\n      axios.get('http://localhost:5000/api/health'),\n      axios.get('http://localhost:5000/api/hadoop/status'), \n      axios.get('http://localhost:5000/api/accuracy')\n    ])\n      .then(([healthRes, hadoopRes, accRes]) => {\n        setSystemStatus({ api: healthRes.data, hadoop: hadoopRes.data });\n        setAccuracy(accRes.data.accuracy);\n      })\n      .catch(err => {\n        console.error('Sistem durumu yüklenirken hata:', err);\n        setSystemStatus({ error: 'Sistem durumu alınamadı' });\n      });\n  }, []);\n\n  // Fetch selected province data\n  useEffect(() => {\n    if (!selectedProvince) return;\n    setLoadingProvince(true);\n    axios.get(`http://localhost:5000/api/province/${selectedProvince}`)\n      .then(res => {\n        setProvinceData(res.data);\n        setErrorProvince(null);\n      })\n      .catch(err => {\n        console.error('İl verisi yüklenirken hata:', err);\n        setErrorProvince('İl verisi yüklenirken hata oluştu');\n      })\n      .finally(() => setLoadingProvince(false));\n  }, [selectedProvince]);\n\n  const handleProvinceSelect = e => {\n    setSelectedProvince(e.target.value);\n    setProvinceData(null);\n  };\n\n  const handlePredictInputChange = e => {\n    const { name, value } = e.target;\n    setPredictForm(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handlePredictSubmit = e => {\n    e.preventDefault();\n    const { soil_ph, rainfall_mm, temperature_celsius } = predictForm;\n    if (!soil_ph || !rainfall_mm || !temperature_celsius) {\n      setPredictError('Lütfen tüm alanları doldurun');\n      return;\n    }\n    setPredictLoading(true);\n    axios.post('http://localhost:5000/api/predict', {\n      soil_ph: parseFloat(soil_ph),\n      rainfall_mm: parseFloat(rainfall_mm),\n      temperature_celsius: parseFloat(temperature_celsius)\n    })\n      .then(res => {\n        setPredictResult(res.data);\n        setPredictError(null);\n      })\n      .catch(err => {\n        console.error('Predict error:', err);\n        setPredictError('Tahmin başarısız');\n      })\n      .finally(() => setPredictLoading(false));\n  };\n\n  const resetPredictForm = () => {\n    setPredictForm({ soil_ph: '', rainfall_mm: '', temperature_celsius: '' });\n    setPredictResult(null);\n    setPredictError(null);\n  };\n\n  const provinceStyle = feature => ({\n    fillColor: selectedProvince == feature.properties.id ? '#4CAF50' : '#3388ff',\n    weight: 2,\n    opacity: 1,\n    color: 'white',\n    dashArray: '3',\n    fillOpacity: 0.7\n  });\n\n  const onEachFeature = (feature, layer) => {\n    layer.on({ click: () => setSelectedProvince(feature.properties.id) });\n    layer.bindTooltip(feature.properties.name);\n  };\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Tarım Tahmin Uygulaması</h1>\n          <p>Türkiye haritasından bir il seçerek verileri görüntüleyin</p>\n        </header>\n\n        <nav className=\"main-nav\">\n          <ul>\n            <li>\n              <NavLink to=\"/\" exact activeClassName=\"active\">Ana Sayfa</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/about\" activeClassName=\"active\">Bu Proje Ne İşe Yarar?</NavLink>\n            </li>\n          </ul>\n        </nav>\n\n        <Routes>\n          <Route path=\"/\" element={\n            <div className=\"container\">\n              {/* Harita */}\n              <div className=\"map-container\">\n                <MapContainer center={[39, 35]} zoom={6} style={{ height: '400px', width: '100%' }}>\n                  <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n                  <GeoJSON data={turkeyGeoJson} style={provinceStyle} onEachFeature={onEachFeature} />\n                </MapContainer>\n              </div>\n\n              {/* Veri ve Tahmin Bölümü */}\n              <div className=\"data-container\">\n                <div className=\"province-selector\">\n                  <h2>İl Seçimi</h2>\n                  <select onChange={handleProvinceSelect} value={selectedProvince || ''}>\n                    <option value=\"\">-- Seçiniz --</option>\n                    {provinces.map(p => (\n                      <option key={p.province_id} value={p.province_id}>{p.province_name}</option>\n                    ))}\n                  </select>\n                </div>\n\n                {loadingProvince && <p>Yükleniyor...</p>}\n                {errorProvince && <p className=\"error\">{errorProvince}</p>}\n\n                {provinceData && !loadingProvince && (\n                  <div className=\"province-data\">\n                    <h2>{provinceData.province_name} İli Verileri</h2>\n                    <div className=\"data-card\">\n                      <div><strong>Toprak pH:</strong> {provinceData.soil_ph}</div>\n                      <div><strong>Yağış (mm):</strong> {provinceData.rainfall_mm}</div>\n                      <div><strong>Sıcaklık (°C):</strong> {provinceData.temperature_celsius}</div>\n                    </div>\n                    <div className=\"prediction-card\">\n                      <h3>Önerilen Ürün</h3>\n                      {(() => {\n                        const idx = provinceData.recommended_crop;\n                        const label = cropClasses[idx];\n                        return <p className=\"prediction\">{cropMap[label] || label}</p>;\n                      })()}\n                    </div>\n                  </div>\n                )}\n\n                {/* Manuel Tahmin */}\n                <div className=\"predict-section\">\n                  <h2>Manuel Tahmin Yap</h2>\n                  <form onSubmit={handlePredictSubmit} className=\"predict-form\">\n                    <div className=\"form-group\">\n                      <label htmlFor=\"soil_ph\">Toprak pH:</label>\n                      <input id=\"soil_ph\" name=\"soil_ph\" type=\"number\" step=\"0.1\" placeholder=\"Örnek: 6.5\" value={predictForm.soil_ph} onChange={handlePredictInputChange} required />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"rainfall_mm\">Yağış (mm):</label>\n                      <input id=\"rainfall_mm\" name=\"rainfall_mm\" type=\"number\" step=\"0.1\" placeholder=\"Örnek: 500\" value={predictForm.rainfall_mm} onChange={handlePredictInputChange} required />\n                    </div>\n                    <div className=\"form-group\">\n                      <label htmlFor=\"temperature_celsius\">Sıcaklık (°C):</label>\n                      <input id=\"temperature_celsius\" name=\"temperature_celsius\" type=\"number\" step=\"0.1\" placeholder=\"Örnek: 25\" value={predictForm.temperature_celsius} onChange={handlePredictInputChange} required />\n                    </div>\n                    <div className=\"form-buttons\">\n                      <button type=\"submit\" disabled={predictLoading} className=\"predict-button\">\n                        {predictLoading ? 'Tahmin Yapılıyor...' : 'Tahmin Yap'}\n                      </button>\n                      <button type=\"button\" onClick={resetPredictForm} className=\"reset-button\">Temizle</button>\n                    </div>\n                  </form>\n                  {predictError && <p className=\"error\">{predictError}</p>}\n                  {predictResult && (\n                    <div className=\"predict-result\">\n                      <h3>Tahmin Sonucu</h3>\n                      {(() => {\n                        const idx = predictResult.predicted_crop;\n                        const label = cropClasses[idx];\n                        return <p><strong>Önerilen Ürün:</strong> {cropMap[label] || label}</p>;\n                      })()}\n                      <div className=\"input-summary\">\n                        <h4>Girilen Değerler:</h4>\n                        <p>pH: {predictResult.input.soil_ph}</p>\n                        <p>Yağış: {predictResult.input.rainfall_mm} mm</p>\n                        <p>Sıcaklık: {predictResult.input.temperature_celsius} °C</p>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          } />\n          {/* Import and add the About component here */}\n          {/* <Route path=\"/about\" element={<About />} /> */}\n        </Routes>\n\n        <footer className=\"App-footer\">\n          <p>Hadoop, Spark, Flask & React ile Tarım Tahmin © 2025</p>\n        </footer>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}