{"ast":null,"code":"var _jsxFileName = \"/home/user/-ift-im.ai/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport turkeyGeoJson from './turkey-provinces.json';\n\n// English -> Turkish map\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cropMap = {\n  rice: 'Pirinç',\n  maize: 'Mısır',\n  chickpea: 'Nohut',\n  kidneybeans: 'Barbunya',\n  pigeonpeas: 'Bezelye',\n  mungbean: 'Mung Fasulyesi',\n  blackgram: 'Kara Fasulye',\n  lentil: 'Mercimek',\n  pomegranate: 'Nar',\n  banana: 'Muz',\n  mango: 'Mango',\n  grapes: 'Üzüm',\n  watermelon: 'Karpuz',\n  muskmelon: 'Kavun',\n  apple: 'Elma'\n};\n\n// LabelEncoder.classes_ (alphabetical) -> index mapping\nconst cropClasses = ['apple', 'banana', 'blackgram', 'chickpea', 'grapes', 'kidneybeans', 'lentil', 'maize', 'mango', 'muskmelon', 'pomegranate', 'rice', 'watermelon'];\nfunction App() {\n  _s();\n  const [provinces, setProvinces] = useState([]);\n  const [selectedProvince, setSelectedProvince] = useState(null);\n  const [provinceData, setProvinceData] = useState(null);\n  const [loadingProvince, setLoadingProvince] = useState(false);\n  const [errorProvince, setErrorProvince] = useState(null);\n  const [systemStatus, setSystemStatus] = useState({});\n  const [predictForm, setPredictForm] = useState({\n    soil_ph: '',\n    rainfall_mm: '',\n    temperature_celsius: ''\n  });\n  const [predictResult, setPredictResult] = useState(null);\n  const [predictLoading, setPredictLoading] = useState(false);\n  const [predictError, setPredictError] = useState(null);\n\n  // Fetch provinces and system status\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/provinces').then(res => setProvinces(res.data)).catch(err => console.error('İller yüklenirken hata:', err));\n    Promise.all([axios.get('http://localhost:5000/api/health'), axios.get('http://localhost:5000/api/hadoop/status'), axios.get('/api/accuracy')]).then(([healthRes, hadoopRes]) => {\n      setSystemStatus({\n        api: healthRes.data,\n        hadoop: hadoopRes.data\n      });\n    }).catch(err => {\n      console.error('Sistem durumu yüklenirken hata:', err);\n      setSystemStatus({\n        error: 'Sistem durumu alınamadı'\n      });\n    });\n  }, []);\n\n  // Fetch selected province data\n  useEffect(() => {\n    if (!selectedProvince) return;\n    setLoadingProvince(true);\n    axios.get(`http://localhost:5000/api/province/${selectedProvince}`).then(res => {\n      setProvinceData(res.data);\n      setErrorProvince(null);\n    }).catch(err => {\n      console.error('İl verisi yüklenirken hata:', err);\n      setErrorProvince('İl verisi yüklenirken hata oluştu');\n    }).finally(() => setLoadingProvince(false));\n  }, [selectedProvince]);\n  const handleProvinceSelect = e => {\n    setSelectedProvince(e.target.value);\n    setProvinceData(null);\n  };\n  const handlePredictInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPredictForm(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handlePredictSubmit = e => {\n    e.preventDefault();\n    const {\n      soil_ph,\n      rainfall_mm,\n      temperature_celsius\n    } = predictForm;\n    if (!soil_ph || !rainfall_mm || !temperature_celsius) {\n      setPredictError('Lütfen tüm alanları doldurun');\n      return;\n    }\n    setPredictLoading(true);\n    axios.post('http://localhost:5000/api/predict', {\n      soil_ph: parseFloat(soil_ph),\n      rainfall_mm: parseFloat(rainfall_mm),\n      temperature_celsius: parseFloat(temperature_celsius)\n    }).then(res => {\n      setPredictResult(res.data);\n      setPredictError(null);\n    }).catch(err => {\n      console.error('Predict error:', err);\n      setPredictError('Tahmin başarısız');\n    }).finally(() => setPredictLoading(false));\n  };\n  const resetPredictForm = () => {\n    setPredictForm({\n      soil_ph: '',\n      rainfall_mm: '',\n      temperature_celsius: ''\n    });\n    setPredictResult(null);\n    setPredictError(null);\n  };\n  const provinceStyle = feature => ({\n    fillColor: selectedProvince == feature.properties.id ? '#4CAF50' : '#3388ff',\n    weight: 2,\n    opacity: 1,\n    color: 'white',\n    dashArray: '3',\n    fillOpacity: 0.7\n  });\n  const onEachFeature = (feature, layer) => {\n    layer.on({\n      click: () => setSelectedProvince(feature.properties.id)\n    });\n    layer.bindTooltip(feature.properties.name);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tar\\u0131m Tahmin Uygulamas\\u0131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"T\\xFCrkiye haritas\\u0131ndan bir il se\\xE7erek verileri g\\xF6r\\xFCnt\\xFCleyin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [39, 35],\n          zoom: 6,\n          style: {\n            height: '400px',\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n            data: turkeyGeoJson,\n            style: provinceStyle,\n            onEachFeature: onEachFeature\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"province-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\u0130l Se\\xE7imi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: handleProvinceSelect,\n            value: selectedProvince || '',\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Se\\xE7iniz --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), provinces.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: p.province_id,\n              children: p.province_name\n            }, p.province_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), loadingProvince && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Y\\xFCkleniyor...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 31\n        }, this), errorProvince && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errorProvince\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 29\n        }, this), provinceData && !loadingProvince && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"province-data\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [provinceData.province_name, \" \\u0130li Verileri\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Toprak pH:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 22\n              }, this), \" \", provinceData.soil_ph]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Ya\\u011F\\u0131\\u015F (mm):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 22\n              }, this), \" \", provinceData.rainfall_mm]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"S\\u0131cakl\\u0131k (\\xB0C):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 22\n              }, this), \" \", provinceData.temperature_celsius]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prediction-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"\\xD6nerilen \\xDCr\\xFCn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), (() => {\n              const idx = provinceData.recommended_crop;\n              const label = cropClasses[idx];\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"prediction\",\n                children: cropMap[label] || label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 26\n              }, this);\n            })()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"predict-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Manuel Tahmin Yap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handlePredictSubmit,\n            className: \"predict-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"soil_ph\",\n                children: \"Toprak pH:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"soil_ph\",\n                name: \"soil_ph\",\n                type: \"number\",\n                step: \"0.1\",\n                placeholder: \"\\xD6rnek: 6.5\",\n                value: predictForm.soil_ph,\n                onChange: handlePredictInputChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"rainfall_mm\",\n                children: \"Ya\\u011F\\u0131\\u015F (mm):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"rainfall_mm\",\n                name: \"rainfall_mm\",\n                type: \"number\",\n                step: \"0.1\",\n                placeholder: \"\\xD6rnek: 500\",\n                value: predictForm.rainfall_mm,\n                onChange: handlePredictInputChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"temperature_celsius\",\n                children: \"S\\u0131cakl\\u0131k (\\xB0C):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"temperature_celsius\",\n                name: \"temperature_celsius\",\n                type: \"number\",\n                step: \"0.1\",\n                placeholder: \"\\xD6rnek: 25\",\n                value: predictForm.temperature_celsius,\n                onChange: handlePredictInputChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                disabled: predictLoading,\n                className: \"predict-button\",\n                children: predictLoading ? 'Tahmin Yapılıyor...' : 'Tahmin Yap'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: resetPredictForm,\n                className: \"reset-button\",\n                children: \"Temizle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), predictError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: predictError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 30\n          }, this), predictResult && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"predict-result\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Tahmin Sonucu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), (() => {\n              const idx = predictResult.predicted_crop;\n              const label = cropClasses[idx];\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\xD6nerilen \\xDCr\\xFCn:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 29\n                }, this), \" \", cropMap[label] || label]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 26\n              }, this);\n            })(), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-summary\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Girilen De\\u011Ferler:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"pH: \", predictResult.input.soil_ph]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Ya\\u011F\\u0131\\u015F: \", predictResult.input.rainfall_mm, \" mm\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"S\\u0131cakl\\u0131k: \", predictResult.input.temperature_celsius, \" \\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"App-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hadoop, Spark, Flask & React ile Tar\\u0131m Tahmin \\xA9 2025\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"HZmzIgLlHuZcj/ldux/stSn/SDA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","MapContainer","TileLayer","GeoJSON","turkeyGeoJson","jsxDEV","_jsxDEV","cropMap","rice","maize","chickpea","kidneybeans","pigeonpeas","mungbean","blackgram","lentil","pomegranate","banana","mango","grapes","watermelon","muskmelon","apple","cropClasses","App","_s","provinces","setProvinces","selectedProvince","setSelectedProvince","provinceData","setProvinceData","loadingProvince","setLoadingProvince","errorProvince","setErrorProvince","systemStatus","setSystemStatus","predictForm","setPredictForm","soil_ph","rainfall_mm","temperature_celsius","predictResult","setPredictResult","predictLoading","setPredictLoading","predictError","setPredictError","get","then","res","data","catch","err","console","error","Promise","all","healthRes","hadoopRes","api","hadoop","finally","handleProvinceSelect","e","target","value","handlePredictInputChange","name","prev","handlePredictSubmit","preventDefault","post","parseFloat","resetPredictForm","provinceStyle","feature","fillColor","properties","id","weight","opacity","color","dashArray","fillOpacity","onEachFeature","layer","on","click","bindTooltip","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","height","width","url","onChange","map","p","province_id","province_name","idx","recommended_crop","label","onSubmit","htmlFor","type","step","placeholder","required","disabled","onClick","predicted_crop","input","_c","$RefreshReg$"],"sources":["/home/user/-ift-im.ai/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport turkeyGeoJson from './turkey-provinces.json';\n\n// English -> Turkish map\nconst cropMap = {\n  rice: 'Pirinç',\n  maize: 'Mısır',\n  chickpea: 'Nohut',\n  kidneybeans: 'Barbunya',\n  pigeonpeas: 'Bezelye',\n  mungbean: 'Mung Fasulyesi',\n  blackgram: 'Kara Fasulye',\n  lentil: 'Mercimek',\n  pomegranate: 'Nar',\n  banana: 'Muz',\n  mango: 'Mango',\n  grapes: 'Üzüm',\n  watermelon: 'Karpuz',\n  muskmelon: 'Kavun',\n  apple: 'Elma'\n};\n\n// LabelEncoder.classes_ (alphabetical) -> index mapping\nconst cropClasses = [\n  'apple', 'banana', 'blackgram', 'chickpea', 'grapes',\n  'kidneybeans', 'lentil', 'maize', 'mango', 'muskmelon',\n  'pomegranate', 'rice', 'watermelon'\n];\n\nfunction App() {\n  const [provinces, setProvinces] = useState([]);\n  const [selectedProvince, setSelectedProvince] = useState(null);\n  const [provinceData, setProvinceData] = useState(null);\n  const [loadingProvince, setLoadingProvince] = useState(false);\n  const [errorProvince, setErrorProvince] = useState(null);\n  const [systemStatus, setSystemStatus] = useState({});\n\n  const [predictForm, setPredictForm] = useState({ soil_ph: '', rainfall_mm: '', temperature_celsius: '' });\n  const [predictResult, setPredictResult] = useState(null);\n  const [predictLoading, setPredictLoading] = useState(false);\n  const [predictError, setPredictError] = useState(null);\n\n  // Fetch provinces and system status\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/provinces')\n      .then(res => setProvinces(res.data))\n      .catch(err => console.error('İller yüklenirken hata:', err));\n\n    Promise.all([\n      axios.get('http://localhost:5000/api/health'),\n      axios.get('http://localhost:5000/api/hadoop/status'), \n      axios.get('/api/accuracy')\n    ])\n      .then(([healthRes, hadoopRes]) => {\n        setSystemStatus({ api: healthRes.data, hadoop: hadoopRes.data });\n      })\n      .catch(err => {\n        console.error('Sistem durumu yüklenirken hata:', err);\n        setSystemStatus({ error: 'Sistem durumu alınamadı' });\n      });\n  }, []);\n\n  // Fetch selected province data\n  useEffect(() => {\n    if (!selectedProvince) return;\n    setLoadingProvince(true);\n    axios.get(`http://localhost:5000/api/province/${selectedProvince}`)\n      .then(res => {\n        setProvinceData(res.data);\n        setErrorProvince(null);\n      })\n      .catch(err => {\n        console.error('İl verisi yüklenirken hata:', err);\n        setErrorProvince('İl verisi yüklenirken hata oluştu');\n      })\n      .finally(() => setLoadingProvince(false));\n  }, [selectedProvince]);\n\n  const handleProvinceSelect = e => {\n    setSelectedProvince(e.target.value);\n    setProvinceData(null);\n  };\n\n  const handlePredictInputChange = e => {\n    const { name, value } = e.target;\n    setPredictForm(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handlePredictSubmit = e => {\n    e.preventDefault();\n    const { soil_ph, rainfall_mm, temperature_celsius } = predictForm;\n    if (!soil_ph || !rainfall_mm || !temperature_celsius) {\n      setPredictError('Lütfen tüm alanları doldurun');\n      return;\n    }\n    setPredictLoading(true);\n    axios.post('http://localhost:5000/api/predict', {\n      soil_ph: parseFloat(soil_ph),\n      rainfall_mm: parseFloat(rainfall_mm),\n      temperature_celsius: parseFloat(temperature_celsius)\n    })\n      .then(res => {\n        setPredictResult(res.data);\n        setPredictError(null);\n      })\n      .catch(err => {\n        console.error('Predict error:', err);\n        setPredictError('Tahmin başarısız');\n      })\n      .finally(() => setPredictLoading(false));\n  };\n\n  const resetPredictForm = () => {\n    setPredictForm({ soil_ph: '', rainfall_mm: '', temperature_celsius: '' });\n    setPredictResult(null);\n    setPredictError(null);\n  };\n\n  const provinceStyle = feature => ({\n    fillColor: selectedProvince == feature.properties.id ? '#4CAF50' : '#3388ff',\n    weight: 2,\n    opacity: 1,\n    color: 'white',\n    dashArray: '3',\n    fillOpacity: 0.7\n  });\n\n  const onEachFeature = (feature, layer) => {\n    layer.on({ click: () => setSelectedProvince(feature.properties.id) });\n    layer.bindTooltip(feature.properties.name);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Tarım Tahmin Uygulaması</h1>\n        <p>Türkiye haritasından bir il seçerek verileri görüntüleyin</p>\n      </header>\n\n      <div className=\"container\">\n        {/* Harita */}\n        <div className=\"map-container\">\n          <MapContainer center={[39, 35]} zoom={6} style={{ height: '400px', width: '100%' }}>\n            <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n            <GeoJSON data={turkeyGeoJson} style={provinceStyle} onEachFeature={onEachFeature} />\n          </MapContainer>\n        </div>\n\n        {/* Veri ve Tahmin Bölümü */}\n        <div className=\"data-container\">\n          <div className=\"province-selector\">\n            <h2>İl Seçimi</h2>\n            <select onChange={handleProvinceSelect} value={selectedProvince || ''}>\n              <option value=\"\">-- Seçiniz --</option>\n              {provinces.map(p => (\n                <option key={p.province_id} value={p.province_id}>{p.province_name}</option>\n              ))}\n            </select>\n          </div>\n\n          {loadingProvince && <p>Yükleniyor...</p>}\n          {errorProvince && <p className=\"error\">{errorProvince}</p>}\n\n          {provinceData && !loadingProvince && (\n            <div className=\"province-data\">\n              <h2>{provinceData.province_name} İli Verileri</h2>\n              <div className=\"data-card\">\n                <div><strong>Toprak pH:</strong> {provinceData.soil_ph}</div>\n                <div><strong>Yağış (mm):</strong> {provinceData.rainfall_mm}</div>\n                <div><strong>Sıcaklık (°C):</strong> {provinceData.temperature_celsius}</div>\n              </div>\n              <div className=\"prediction-card\">\n                <h3>Önerilen Ürün</h3>\n                {(() => {\n                  const idx = provinceData.recommended_crop;\n                  const label = cropClasses[idx];\n                  return <p className=\"prediction\">{cropMap[label] || label}</p>;\n                })()}\n              </div>\n            </div>\n          )}\n\n          {/* Manuel Tahmin */}\n          <div className=\"predict-section\">\n            <h2>Manuel Tahmin Yap</h2>\n            <form onSubmit={handlePredictSubmit} className=\"predict-form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"soil_ph\">Toprak pH:</label>\n                <input id=\"soil_ph\" name=\"soil_ph\" type=\"number\" step=\"0.1\" placeholder=\"Örnek: 6.5\" value={predictForm.soil_ph} onChange={handlePredictInputChange} required />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"rainfall_mm\">Yağış (mm):</label>\n                <input id=\"rainfall_mm\" name=\"rainfall_mm\" type=\"number\" step=\"0.1\" placeholder=\"Örnek: 500\" value={predictForm.rainfall_mm} onChange={handlePredictInputChange} required />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"temperature_celsius\">Sıcaklık (°C):</label>\n                <input id=\"temperature_celsius\" name=\"temperature_celsius\" type=\"number\" step=\"0.1\" placeholder=\"Örnek: 25\" value={predictForm.temperature_celsius} onChange={handlePredictInputChange} required />\n              </div>\n              <div className=\"form-buttons\">\n                <button type=\"submit\" disabled={predictLoading} className=\"predict-button\">\n                  {predictLoading ? 'Tahmin Yapılıyor...' : 'Tahmin Yap'}\n                </button>\n                <button type=\"button\" onClick={resetPredictForm} className=\"reset-button\">Temizle</button>\n              </div>\n            </form>\n            {predictError && <p className=\"error\">{predictError}</p>}\n            {predictResult && (\n              <div className=\"predict-result\">\n                <h3>Tahmin Sonucu</h3>\n                {(() => {\n                  const idx = predictResult.predicted_crop;\n                  const label = cropClasses[idx];\n                  return <p><strong>Önerilen Ürün:</strong> {cropMap[label] || label}</p>;\n                })()}\n                <div className=\"input-summary\">\n                  <h4>Girilen Değerler:</h4>\n                  <p>pH: {predictResult.input.soil_ph}</p>\n                  <p>Yağış: {predictResult.input.rainfall_mm} mm</p>\n                  <p>Sıcaklık: {predictResult.input.temperature_celsius} °C</p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <footer className=\"App-footer\">\n        <p>Hadoop, Spark, Flask & React ile Tarım Tahmin © 2025</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}