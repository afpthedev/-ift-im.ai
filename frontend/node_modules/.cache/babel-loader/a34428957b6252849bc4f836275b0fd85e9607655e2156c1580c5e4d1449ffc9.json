{"ast":null,"code":"var _jsxFileName = \"/home/user/-ift-im.ai/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport { Routes, Route, NavLink } from 'react-router-dom';\nimport 'leaflet/dist/leaflet.css';\nimport turkeyGeoJson from './turkey-provinces.json';\nimport About from './About';\n\n// English -> Turkish map\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cropMap = {\n  rice: 'Pirinç',\n  maize: 'Mısır',\n  chickpea: 'Nohut',\n  kidneybeans: 'Barbunya',\n  pigeonpeas: 'Bezelye',\n  mungbean: 'Mung Fasulyesi',\n  blackgram: 'Kara Fasulye',\n  lentil: 'Mercimek',\n  pomegranate: 'Nar',\n  banana: 'Muz',\n  mango: 'Mango',\n  grapes: 'Üzüm',\n  watermelon: 'Karpuz',\n  coconut: 'Hindistan Cevizi',\n  cotton: 'Pamuk',\n  muskmelon: 'Kavun',\n  apple: 'Elma'\n};\nconst cropClasses = ['apple', 'banana', 'blackgram', 'chickpea', 'grapes', 'kidneybeans', 'lentil', 'maize', 'mango', 'muskmelon', 'coconut', 'cotton', 'pomegranate', 'rice', 'watermelon'];\nfunction App() {\n  _s();\n  const [provinces, setProvinces] = useState([]);\n  const [selectedProvince, setSelectedProvince] = useState(null);\n  const [provinceData, setProvinceData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [systemStatus, setSystemStatus] = useState({});\n  const [accuracy, setAccuracy] = useState(null);\n  const [predictForm, setPredictForm] = useState({\n    soil_ph: '',\n    rainfall_mm: '',\n    temperature_celsius: ''\n  });\n  const [predictResult, setPredictResult] = useState(null);\n  const [predictLoading, setPredictLoading] = useState(false);\n  const [predictError, setPredictError] = useState(null);\n  useEffect(() => {\n    axios.get('/api/provinces').then(res => setProvinces(res.data)).catch(err => console.error(err));\n    Promise.all([axios.get('/api/health'), axios.get('/api/hadoop/status'), axios.get('/api/accuracy')]).then(([h, h2, acc]) => {\n      setSystemStatus({\n        api: h.data,\n        hadoop: h2.data\n      });\n      setAccuracy(acc.data.accuracy);\n    }).catch(err => console.error(err));\n  }, []);\n  useEffect(() => {\n    if (!selectedProvince) return;\n    setLoading(true);\n    axios.get(`/api/province/${selectedProvince}`).then(res => {\n      setProvinceData(res.data);\n      setError(null);\n    }).catch(() => setError('İl verisi yüklenirken hata oluştu')).finally(() => setLoading(false));\n  }, [selectedProvince]);\n  const handleProvinceSelect = e => {\n    setSelectedProvince(e.target.value);\n    setProvinceData(null);\n  };\n  const handlePredictChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPredictForm(f => ({\n      ...f,\n      [name]: value\n    }));\n  };\n  const handlePredictSubmit = e => {\n    e.preventDefault();\n    const {\n      soil_ph,\n      rainfall_mm,\n      temperature_celsius\n    } = predictForm;\n    if (!soil_ph || !rainfall_mm || !temperature_celsius) {\n      setPredictError('Lütfen tüm alanları doldurun');\n      return;\n    }\n    setPredictLoading(true);\n    axios.post('/api/predict', {\n      soil_ph: +soil_ph,\n      rainfall_mm: +rainfall_mm,\n      temperature_celsius: +temperature_celsius\n    }).then(res => {\n      setPredictResult(res.data);\n      setPredictError(null);\n    }).catch(() => setPredictError('Tahmin başarısız')).finally(() => setPredictLoading(false));\n  };\n  const resetPredict = () => {\n    setPredictForm({\n      soil_ph: '',\n      rainfall_mm: '',\n      temperature_celsius: ''\n    });\n    setPredictResult(null);\n    setPredictError(null);\n  };\n  const provinceStyle = f => ({\n    fillColor: selectedProvince === f.properties.id ? '#4CAF50' : '#3388ff',\n    weight: 2,\n    opacity: 1,\n    color: 'white',\n    dashArray: '3',\n    fillOpacity: 0.7\n  });\n  const onEachFeature = (feature, layer) => {\n    layer.on({\n      click: () => setSelectedProvince(feature.properties.id)\n    });\n    layer.bindTooltip(feature.properties.name);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tar\\u0131m Tahmin Uygulamas\\u0131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/\",\n          end: true,\n          children: \"Ana Sayfa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/about\",\n          children: \"Proje Nedir?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"main\", {\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"map\",\n            children: /*#__PURE__*/_jsxDEV(MapContainer, {\n              center: [39, 35],\n              zoom: 6,\n              style: {\n                height: 400\n              },\n              children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n                url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n                data: turkeyGeoJson,\n                style: provinceStyle,\n                onEachFeature: onEachFeature\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"data\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\u0130l Se\\xE7imi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: handleProvinceSelect,\n              value: selectedProvince || '',\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Se\\xE7iniz --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this), provinces.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: p.province_id,\n                children: p.province_name\n              }, p.province_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Y\\xFCkleniyor...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 27\n            }, this), provinceData && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: provinceData.province_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"pH: \", provinceData.soil_ph]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Ya\\u011F\\u0131\\u015F: \", provinceData.rainfall_mm, \" mm\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"S\\u0131cakl\\u0131k: \", provinceData.temperature_celsius, \" \\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\xDCr\\xFCn:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 23\n                }, this), ' ', cropMap[cropClasses[provinceData.recommended_crop]] || cropClasses[provinceData.recommended_crop]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"predict\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Manuel Tahmin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handlePredictSubmit,\n              children: [['soil_ph', 'rainfall_mm', 'temperature_celsius'].map(name => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: name,\n                  children: name.replace('_', ' ')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: name,\n                  name: name,\n                  type: \"number\",\n                  step: \"0.1\",\n                  value: predictForm[name],\n                  onChange: handlePredictChange,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 23\n                }, this)]\n              }, name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                disabled: predictLoading,\n                children: predictLoading ? 'Tahmin...' : 'Tahmin Yap'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: resetPredict,\n                children: \"Temizle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), predictError && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error\",\n              children: predictError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 34\n            }, this), predictResult && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [\"Sonu\\xE7:\", ' ', cropMap[cropClasses[predictResult.predicted_crop]] || cropClasses[predictResult.predicted_crop]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"pH: \", predictResult.input.soil_ph]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Ya\\u011F\\u0131\\u015F: \", predictResult.input.rainfall_mm]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"S\\u0131cakl\\u0131k: \", predictResult.input.temperature_celsius]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hadoop, Spark, Flask & React \\xA9 2025\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GXkyDAXtYCcXUQdSPzaQWTJkovU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","MapContainer","TileLayer","GeoJSON","Routes","Route","NavLink","turkeyGeoJson","About","jsxDEV","_jsxDEV","cropMap","rice","maize","chickpea","kidneybeans","pigeonpeas","mungbean","blackgram","lentil","pomegranate","banana","mango","grapes","watermelon","coconut","cotton","muskmelon","apple","cropClasses","App","_s","provinces","setProvinces","selectedProvince","setSelectedProvince","provinceData","setProvinceData","loading","setLoading","error","setError","systemStatus","setSystemStatus","accuracy","setAccuracy","predictForm","setPredictForm","soil_ph","rainfall_mm","temperature_celsius","predictResult","setPredictResult","predictLoading","setPredictLoading","predictError","setPredictError","get","then","res","data","catch","err","console","Promise","all","h","h2","acc","api","hadoop","finally","handleProvinceSelect","e","target","value","handlePredictChange","name","f","handlePredictSubmit","preventDefault","post","resetPredict","provinceStyle","fillColor","properties","id","weight","opacity","color","dashArray","fillOpacity","onEachFeature","feature","layer","on","click","bindTooltip","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","end","path","element","center","zoom","style","height","url","onChange","map","p","province_id","province_name","recommended_crop","onSubmit","htmlFor","replace","type","step","required","disabled","onClick","predicted_crop","input","_c","$RefreshReg$"],"sources":["/home/user/-ift-im.ai/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport { Routes, Route, NavLink } from 'react-router-dom';\nimport 'leaflet/dist/leaflet.css';\nimport turkeyGeoJson from './turkey-provinces.json';\nimport About from './About';\n\n// English -> Turkish map\nconst cropMap = {\n  rice: 'Pirinç',\n  maize: 'Mısır',\n  chickpea: 'Nohut',\n  kidneybeans: 'Barbunya',\n  pigeonpeas: 'Bezelye',\n  mungbean: 'Mung Fasulyesi',\n  blackgram: 'Kara Fasulye',\n  lentil: 'Mercimek',\n  pomegranate: 'Nar',\n  banana: 'Muz',\n  mango: 'Mango',\n  grapes: 'Üzüm',\n  watermelon: 'Karpuz',\n  coconut: 'Hindistan Cevizi',\n  cotton: 'Pamuk',\n  muskmelon: 'Kavun',\n  apple: 'Elma'\n};\n\nconst cropClasses = [\n  'apple', 'banana', 'blackgram', 'chickpea', 'grapes',\n  'kidneybeans', 'lentil', 'maize', 'mango', 'muskmelon',\n  'coconut', 'cotton', 'pomegranate', 'rice', 'watermelon'\n];\n\nfunction App() {\n  const [provinces, setProvinces] = useState([]);\n  const [selectedProvince, setSelectedProvince] = useState(null);\n  const [provinceData, setProvinceData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [systemStatus, setSystemStatus] = useState({});\n  const [accuracy, setAccuracy] = useState(null);\n\n  const [predictForm, setPredictForm] = useState({\n    soil_ph: '',\n    rainfall_mm: '',\n    temperature_celsius: ''\n  });\n  const [predictResult, setPredictResult] = useState(null);\n  const [predictLoading, setPredictLoading] = useState(false);\n  const [predictError, setPredictError] = useState(null);\n\n  useEffect(() => {\n    axios.get('/api/provinces')\n      .then(res => setProvinces(res.data))\n      .catch(err => console.error(err));\n\n    Promise.all([\n      axios.get('/api/health'),\n      axios.get('/api/hadoop/status'),\n      axios.get('/api/accuracy')\n    ]).then(([h, h2, acc]) => {\n      setSystemStatus({ api: h.data, hadoop: h2.data });\n      setAccuracy(acc.data.accuracy);\n    }).catch(err => console.error(err));\n  }, []);\n\n  useEffect(() => {\n    if (!selectedProvince) return;\n    setLoading(true);\n    axios.get(`/api/province/${selectedProvince}`)\n      .then(res => {\n        setProvinceData(res.data);\n        setError(null);\n      })\n      .catch(() => setError('İl verisi yüklenirken hata oluştu'))\n      .finally(() => setLoading(false));\n  }, [selectedProvince]);\n\n  const handleProvinceSelect = e => {\n    setSelectedProvince(e.target.value);\n    setProvinceData(null);\n  };\n\n  const handlePredictChange = e => {\n    const { name, value } = e.target;\n    setPredictForm(f => ({ ...f, [name]: value }));\n  };\n\n  const handlePredictSubmit = e => {\n    e.preventDefault();\n    const { soil_ph, rainfall_mm, temperature_celsius } = predictForm;\n    if (!soil_ph || !rainfall_mm || !temperature_celsius) {\n      setPredictError('Lütfen tüm alanları doldurun');\n      return;\n    }\n    setPredictLoading(true);\n    axios.post('/api/predict', {\n      soil_ph: +soil_ph,\n      rainfall_mm: +rainfall_mm,\n      temperature_celsius: +temperature_celsius\n    })\n      .then(res => {\n        setPredictResult(res.data);\n        setPredictError(null);\n      })\n      .catch(() => setPredictError('Tahmin başarısız'))\n      .finally(() => setPredictLoading(false));\n  };\n\n  const resetPredict = () => {\n    setPredictForm({ soil_ph: '', rainfall_mm: '', temperature_celsius: '' });\n    setPredictResult(null);\n    setPredictError(null);\n  };\n\n  const provinceStyle = f => ({\n    fillColor: selectedProvince === f.properties.id ? '#4CAF50' : '#3388ff',\n    weight: 2,\n    opacity: 1,\n    color: 'white',\n    dashArray: '3',\n    fillOpacity: 0.7\n  });\n\n  const onEachFeature = (feature, layer) => {\n    layer.on({ click: () => setSelectedProvince(feature.properties.id) });\n    layer.bindTooltip(feature.properties.name);\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Tarım Tahmin Uygulaması</h1>\n        <nav>\n          <NavLink to=\"/\" end>\n            Ana Sayfa\n          </NavLink>\n          <NavLink to=\"/about\">Proje Nedir?</NavLink>\n        </nav>\n      </header>\n\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <main>\n              <section className=\"map\">\n                <MapContainer center={[39, 35]} zoom={6} style={{ height: 400 }}>\n                  <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n                  <GeoJSON\n                    data={turkeyGeoJson}\n                    style={provinceStyle}\n                    onEachFeature={onEachFeature}\n                  />\n                </MapContainer>\n              </section>\n\n              <section className=\"data\">\n                <h2>İl Seçimi</h2>\n                <select onChange={handleProvinceSelect} value={selectedProvince || ''}>\n                  <option value=\"\">-- Seçiniz --</option>\n                  {provinces.map(p => (\n                    <option key={p.province_id} value={p.province_id}>\n                      {p.province_name}\n                    </option>\n                  ))}\n                </select>\n\n                {loading && <p>Yükleniyor...</p>}\n                {error && <p className=\"error\">{error}</p>}\n\n                {provinceData && (\n                  <div>\n                    <h3>{provinceData.province_name}</h3>\n                    <p>pH: {provinceData.soil_ph}</p>\n                    <p>Yağış: {provinceData.rainfall_mm} mm</p>\n                    <p>Sıcaklık: {provinceData.temperature_celsius} °C</p>\n                    <p>\n                      <strong>Ürün:</strong>{' '}\n                      {cropMap[cropClasses[provinceData.recommended_crop]] ||\n                        cropClasses[provinceData.recommended_crop]}\n                    </p>\n                  </div>\n                )}\n              </section>\n\n              <section className=\"predict\">\n                <h2>Manuel Tahmin</h2>\n                <form onSubmit={handlePredictSubmit}>\n                  {['soil_ph', 'rainfall_mm', 'temperature_celsius'].map(name => (\n                    <div key={name}>\n                      <label htmlFor={name}>{name.replace('_', ' ')}</label>\n                      <input\n                        id={name}\n                        name={name}\n                        type=\"number\"\n                        step=\"0.1\"\n                        value={predictForm[name]}\n                        onChange={handlePredictChange}\n                        required\n                      />\n                    </div>\n                  ))}\n                  <button type=\"submit\" disabled={predictLoading}>\n                    {predictLoading ? 'Tahmin...' : 'Tahmin Yap'}\n                  </button>\n                  <button type=\"button\" onClick={resetPredict}>\n                    Temizle\n                  </button>\n                </form>\n                {predictError && <p className=\"error\">{predictError}</p>}\n                {predictResult && (\n                  <div>\n                    <h3>\n                      Sonuç:{' '}\n                      {cropMap[cropClasses[predictResult.predicted_crop]] ||\n                        cropClasses[predictResult.predicted_crop]}\n                    </h3>\n                    <p>pH: {predictResult.input.soil_ph}</p>\n                    <p>Yağış: {predictResult.input.rainfall_mm}</p>\n                    <p>Sıcaklık: {predictResult.input.temperature_celsius}</p>\n                  </div>\n                )}\n              </section>\n            </main>\n          }\n        />\n        <Route path=\"/about\" element={<About />} />\n      </Routes>\n\n      <footer>\n        <p>Hadoop, Spark, Flask & React © 2025</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}