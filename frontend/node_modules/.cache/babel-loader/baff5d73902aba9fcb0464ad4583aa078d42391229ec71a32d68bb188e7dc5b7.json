{"ast":null,"code":"var _jsxFileName = \"/app/src/App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\nimport { Routes, Route, NavLink } from 'react-router-dom';\nimport 'leaflet/dist/leaflet.css';\nimport turkeyGeoJson from './turkey-provinces.json';\nimport About from './About';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cropMap = {\n  rice: 'Pirinç',\n  maize: 'Mısır',\n  chickpea: 'Nohut',\n  kidneybeans: 'Barbunya',\n  pigeonpeas: 'Bezelye',\n  mungbean: 'Mung Fasulyesi',\n  blackgram: 'Kara Fasulye',\n  lentil: 'Mercimek',\n  pomegranate: 'Nar',\n  banana: 'Muz',\n  mango: 'Mango',\n  grapes: 'Üzüm',\n  watermelon: 'Karpuz',\n  coconut: 'Hindistan Cevizi',\n  cotton: 'Pamuk',\n  muskmelon: 'Kavun',\n  apple: 'Elma'\n};\nconst cropClasses = ['apple', 'banana', 'blackgram', 'chickpea', 'grapes', 'kidneybeans', 'lentil', 'maize', 'mango', 'muskmelon', 'coconut', 'cotton', 'pomegranate', 'rice', 'watermelon'];\nfunction App() {\n  _s();\n  const [provinces, setProvinces] = useState([]);\n  const [selectedProvince, setSelectedProvince] = useState(null);\n  const [provinceData, setProvinceData] = useState(null);\n  const [loadingProvince, setLoadingProvince] = useState(false);\n  const [errorProvince, setErrorProvince] = useState(null);\n  const [systemStatus, setSystemStatus] = useState({});\n  const [accuracy, setAccuracy] = useState(null);\n  const [predictForm, setPredictForm] = useState({\n    soil_ph: '',\n    rainfall_mm: '',\n    temperature_celsius: ''\n  });\n  const [predictResult, setPredictResult] = useState(null);\n  const [predictLoading, setPredictLoading] = useState(false);\n  const [predictError, setPredictError] = useState(null);\n  useEffect(() => {\n    axios.get('/api/provinces').then(res => setProvinces(res.data)).catch(() => {});\n    Promise.all([axios.get('/api/health'), axios.get('/api/hadoop/status'), axios.get('/api/accuracy')]).then(([h, hdfs, a]) => {\n      setSystemStatus({\n        api: h.data,\n        hadoop: hdfs.data\n      });\n      setAccuracy(a.data.accuracy);\n    }).catch(() => setSystemStatus({\n      error: 'Sistem durumu alınamadı'\n    }));\n  }, []);\n  useEffect(() => {\n    if (!selectedProvince) return;\n    setLoadingProvince(true);\n    axios.get(`/api/province/${selectedProvince}`).then(res => {\n      setProvinceData(res.data);\n      setErrorProvince(null);\n    }).catch(() => setErrorProvince('İl verisi yüklenirken hata oluştu')).finally(() => setLoadingProvince(false));\n  }, [selectedProvince]);\n  const handleProvinceSelect = e => {\n    setSelectedProvince(e.target.value);\n    setProvinceData(null);\n  };\n  const handlePredictChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPredictForm(f => ({\n      ...f,\n      [name]: value\n    }));\n  };\n  const handlePredictSubmit = e => {\n    e.preventDefault();\n    const {\n      soil_ph,\n      rainfall_mm,\n      temperature_celsius\n    } = predictForm;\n    if (!soil_ph || !rainfall_mm || !temperature_celsius) {\n      setPredictError('Lütfen tüm alanları doldurun');\n      return;\n    }\n    setPredictLoading(true);\n    axios.post('/api/predict', {\n      soil_ph: parseFloat(soil_ph),\n      rainfall_mm: parseFloat(rainfall_mm),\n      temperature_celsius: parseFloat(temperature_celsius)\n    }).then(res => {\n      setPredictResult(res.data);\n      setPredictError(null);\n    }).catch(() => setPredictError('Tahmin başarısız')).finally(() => setPredictLoading(false));\n  };\n  const resetPredictForm = () => {\n    setPredictForm({\n      soil_ph: '',\n      rainfall_mm: '',\n      temperature_celsius: ''\n    });\n    setPredictResult(null);\n    setPredictError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Tar\\u0131m Tahmin Uygulamas\\u0131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"main-nav\",\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        children: \"Ana Sayfa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), \" | \", /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/about\",\n        children: \"Hakk\\u0131nda\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-container\",\n            style: {\n              width: '100%',\n              height: 500\n            },\n            children: /*#__PURE__*/_jsxDEV(MapContainer, {\n              center: [39, 35],\n              zoom: 6,\n              style: {\n                height: '100%',\n                width: '100%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n                url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(GeoJSON, {\n                data: turkeyGeoJson,\n                style: f => ({\n                  fillColor: f.properties.id == selectedProvince ? '#4CAF50' : '#3388ff',\n                  weight: 2,\n                  color: 'white',\n                  dashArray: '3',\n                  fillOpacity: 0.7\n                }),\n                onEachFeature: (f, l) => {\n                  l.on({\n                    click: () => setSelectedProvince(f.properties.id)\n                  });\n                  l.bindTooltip(f.properties.name);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forms-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"section\", {\n              className: \"province-selector\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"\\u0130l Se\\xE7imi\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                onChange: handleProvinceSelect,\n                value: selectedProvince || '',\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"-- Se\\xE7iniz --\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this), provinces.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: p.province_id,\n                  children: p.province_name\n                }, p.province_id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 37\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this), loadingProvince && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Y\\xFCkleniyor\\u2026\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this), errorProvince && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error\",\n                children: errorProvince\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), provinceData && /*#__PURE__*/_jsxDEV(\"section\", {\n              className: \"province-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [provinceData.province_name, \" Verileri\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"pH:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 22\n                }, this), \" \", provinceData.soil_ph]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Ya\\u011F\\u0131\\u015F:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 22\n                }, this), \" \", provinceData.rainfall_mm, \" mm\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"S\\u0131cakl\\u0131k:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 22\n                }, this), \" \", provinceData.temperature_celsius, \" \\xB0C\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"\\xD6nerilen \\xDCr\\xFCn:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), (() => {\n                const idx = provinceData.recommended_crop;\n                const label = cropClasses[idx];\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: cropMap[label] || label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 28\n                }, this);\n              })()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              className: \"predict-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Manuel Tahmin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handlePredictSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"pH: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"soil_ph\",\n                    type: \"number\",\n                    step: \"0.1\",\n                    value: predictForm.soil_ph,\n                    onChange: handlePredictChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 30\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 145\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Ya\\u011F\\u0131\\u015F: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"rainfall_mm\",\n                    type: \"number\",\n                    step: \"0.1\",\n                    value: predictForm.rainfall_mm,\n                    onChange: handlePredictChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 156\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"S\\u0131cakl\\u0131k: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"temperature_celsius\",\n                    type: \"number\",\n                    step: \"0.1\",\n                    value: predictForm.temperature_celsius,\n                    onChange: handlePredictChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 36\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 175\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  disabled: predictLoading,\n                  children: predictLoading ? '…' : 'Tahmin Yap'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: resetPredictForm,\n                  children: \"Temizle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), predictError && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"error\",\n                children: predictError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 34\n              }, this), predictResult && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"predict-result\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Tahmin Sonucu\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"\\xD6nerilen \\xDCr\\xFCn:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 24\n                  }, this), \" \", (() => {\n                    const idx = predictResult.predicted_crop;\n                    const label = cropClasses[idx];\n                    return cropMap[label] || label;\n                  })()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Girilen De\\u011Ferler\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"pH: \", predictResult.input.soil_ph]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Ya\\u011F\\u0131\\u015F: \", predictResult.input.rainfall_mm, \" mm\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"S\\u0131cakl\\u0131k: \", predictResult.input.temperature_celsius, \" \\xB0C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hadoop \\xB7 Spark \\xB7 Flask & React Tar\\u0131m Tahmin \\xA9 2025\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4YmJiPeJhk7ynVzyL2RchNT4iQE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","MapContainer","TileLayer","GeoJSON","Routes","Route","NavLink","turkeyGeoJson","About","jsxDEV","_jsxDEV","Fragment","_Fragment","cropMap","rice","maize","chickpea","kidneybeans","pigeonpeas","mungbean","blackgram","lentil","pomegranate","banana","mango","grapes","watermelon","coconut","cotton","muskmelon","apple","cropClasses","App","_s","provinces","setProvinces","selectedProvince","setSelectedProvince","provinceData","setProvinceData","loadingProvince","setLoadingProvince","errorProvince","setErrorProvince","systemStatus","setSystemStatus","accuracy","setAccuracy","predictForm","setPredictForm","soil_ph","rainfall_mm","temperature_celsius","predictResult","setPredictResult","predictLoading","setPredictLoading","predictError","setPredictError","get","then","res","data","catch","Promise","all","h","hdfs","a","api","hadoop","error","finally","handleProvinceSelect","e","target","value","handlePredictChange","name","f","handlePredictSubmit","preventDefault","post","parseFloat","resetPredictForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","path","element","style","width","height","center","zoom","url","fillColor","properties","id","weight","color","dashArray","fillOpacity","onEachFeature","l","on","click","bindTooltip","onChange","map","p","province_id","province_name","idx","recommended_crop","label","onSubmit","type","step","disabled","onClick","predicted_crop","input","_c","$RefreshReg$"],"sources":["/app/src/App.js"],"sourcesContent":["// frontend/src/App.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { MapContainer, TileLayer, GeoJSON } from 'react-leaflet';\r\nimport { Routes, Route, NavLink } from 'react-router-dom';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport turkeyGeoJson from './turkey-provinces.json';\r\nimport About from './About';\r\n\r\nconst cropMap = {\r\n  rice: 'Pirinç', maize: 'Mısır', chickpea: 'Nohut',\r\n  kidneybeans: 'Barbunya', pigeonpeas: 'Bezelye',\r\n  mungbean: 'Mung Fasulyesi', blackgram: 'Kara Fasulye',\r\n  lentil: 'Mercimek', pomegranate: 'Nar', banana: 'Muz',\r\n  mango: 'Mango', grapes: 'Üzüm', watermelon: 'Karpuz',\r\n  coconut: 'Hindistan Cevizi', cotton: 'Pamuk',\r\n  muskmelon: 'Kavun', apple: 'Elma'\r\n};\r\n\r\nconst cropClasses = [\r\n  'apple','banana','blackgram','chickpea','grapes',\r\n  'kidneybeans','lentil','maize','mango','muskmelon',\r\n  'coconut','cotton','pomegranate','rice','watermelon'\r\n];\r\n\r\nfunction App() {\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [selectedProvince, setSelectedProvince] = useState(null);\r\n  const [provinceData, setProvinceData] = useState(null);\r\n  const [loadingProvince, setLoadingProvince] = useState(false);\r\n  const [errorProvince, setErrorProvince] = useState(null);\r\n  const [systemStatus, setSystemStatus] = useState({});\r\n  const [accuracy, setAccuracy] = useState(null);\r\n\r\n  const [predictForm, setPredictForm] = useState({ soil_ph: '', rainfall_mm: '', temperature_celsius: '' });\r\n  const [predictResult, setPredictResult] = useState(null);\r\n  const [predictLoading, setPredictLoading] = useState(false);\r\n  const [predictError, setPredictError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios.get('/api/provinces')\r\n      .then(res => setProvinces(res.data))\r\n      .catch(() => {});\r\n    Promise.all([\r\n      axios.get('/api/health'),\r\n      axios.get('/api/hadoop/status'),\r\n      axios.get('/api/accuracy')\r\n    ]).then(([h, hdfs, a]) => {\r\n      setSystemStatus({ api: h.data, hadoop: hdfs.data });\r\n      setAccuracy(a.data.accuracy);\r\n    }).catch(() => setSystemStatus({ error: 'Sistem durumu alınamadı' }));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!selectedProvince) return;\r\n    setLoadingProvince(true);\r\n    axios.get(`/api/province/${selectedProvince}`)\r\n      .then(res => {\r\n        setProvinceData(res.data);\r\n        setErrorProvince(null);\r\n      })\r\n      .catch(() => setErrorProvince('İl verisi yüklenirken hata oluştu'))\r\n      .finally(() => setLoadingProvince(false));\r\n  }, [selectedProvince]);\r\n\r\n  const handleProvinceSelect = e => {\r\n    setSelectedProvince(e.target.value);\r\n    setProvinceData(null);\r\n  };\r\n\r\n  const handlePredictChange = e => {\r\n    const { name, value } = e.target;\r\n    setPredictForm(f => ({ ...f, [name]: value }));\r\n  };\r\n\r\n  const handlePredictSubmit = e => {\r\n    e.preventDefault();\r\n    const { soil_ph, rainfall_mm, temperature_celsius } = predictForm;\r\n    if (!soil_ph || !rainfall_mm || !temperature_celsius) {\r\n      setPredictError('Lütfen tüm alanları doldurun');\r\n      return;\r\n    }\r\n    setPredictLoading(true);\r\n    axios.post('/api/predict', {\r\n      soil_ph: parseFloat(soil_ph),\r\n      rainfall_mm: parseFloat(rainfall_mm),\r\n      temperature_celsius: parseFloat(temperature_celsius)\r\n    })\r\n      .then(res => {\r\n        setPredictResult(res.data);\r\n        setPredictError(null);\r\n      })\r\n      .catch(() => setPredictError('Tahmin başarısız'))\r\n      .finally(() => setPredictLoading(false));\r\n  };\r\n\r\n  const resetPredictForm = () => {\r\n    setPredictForm({ soil_ph: '', rainfall_mm: '', temperature_celsius: '' });\r\n    setPredictResult(null);\r\n    setPredictError(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Tarım Tahmin Uygulaması</h1>\r\n      </header>\r\n\r\n      <nav className=\"main-nav\">\r\n        <NavLink to=\"/\">Ana Sayfa</NavLink>{\" | \"}\r\n        <NavLink to=\"/about\">Hakkında</NavLink>\r\n      </nav>\r\n\r\n      <Routes>\r\n        <Route path=\"/\" element={\r\n          <>\r\n            <div className=\"map-container\" style={{ width:'100%',height:500 }}>\r\n              <MapContainer center={[39,35]} zoom={6} style={{height:'100%',width:'100%'}}>\r\n                <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\r\n                <GeoJSON data={turkeyGeoJson}\r\n                  style={f=>({ fillColor: f.properties.id==selectedProvince?'#4CAF50':'#3388ff', weight:2, color:'white', dashArray:'3', fillOpacity:0.7 })}\r\n                  onEachFeature={(f,l)=>{ l.on({click:()=>setSelectedProvince(f.properties.id)}); l.bindTooltip(f.properties.name);} }\r\n                />\r\n              </MapContainer>\r\n            </div>\r\n\r\n            <div className=\"forms-wrapper\">\r\n              <section className=\"province-selector\">\r\n                <h2>İl Seçimi</h2>\r\n                <select onChange={handleProvinceSelect} value={selectedProvince||''}>\r\n                  <option value=\"\">-- Seçiniz --</option>\r\n                  {provinces.map(p=><option key={p.province_id} value={p.province_id}>{p.province_name}</option>)}\r\n                </select>\r\n                {loadingProvince && <p>Yükleniyor…</p>}\r\n                {errorProvince && <p className=\"error\">{errorProvince}</p>}\r\n              </section>\r\n\r\n              {provinceData && (\r\n                <section className=\"province-data\">\r\n                  <h2>{provinceData.province_name} Verileri</h2>\r\n                  <p><strong>pH:</strong> {provinceData.soil_ph}</p>\r\n                  <p><strong>Yağış:</strong> {provinceData.rainfall_mm} mm</p>\r\n                  <p><strong>Sıcaklık:</strong> {provinceData.temperature_celsius} °C</p>\r\n                  <h3>Önerilen Ürün:</h3>\r\n                  {(() => {\r\n                    const idx = provinceData.recommended_crop;\r\n                    const label = cropClasses[idx];\r\n                    return <p>{cropMap[label]||label}</p>;\r\n                  })()}\r\n                </section>\r\n              )}\r\n\r\n              <section className=\"predict-section\">\r\n                <h2>Manuel Tahmin</h2>\r\n                <form onSubmit={handlePredictSubmit}>\r\n                  <label>pH: <input name=\"soil_ph\" type=\"number\" step=\"0.1\" value={predictForm.soil_ph} onChange={handlePredictChange}/></label><br/>\r\n                  <label>Yağış: <input name=\"rainfall_mm\" type=\"number\" step=\"0.1\" value={predictForm.rainfall_mm} onChange={handlePredictChange}/></label><br/>\r\n                  <label>Sıcaklık: <input name=\"temperature_celsius\" type=\"number\" step=\"0.1\" value={predictForm.temperature_celsius} onChange={handlePredictChange}/></label><br/>\r\n                  <button type=\"submit\" disabled={predictLoading}>{predictLoading?'…':'Tahmin Yap'}</button>\r\n                  <button type=\"button\" onClick={resetPredictForm}>Temizle</button>\r\n                </form>\r\n                {predictError && <p className=\"error\">{predictError}</p>}\r\n\r\n                {predictResult && (\r\n                  <div className=\"predict-result\">\r\n                    <h3>Tahmin Sonucu</h3>\r\n                    <p><strong>Önerilen Ürün:</strong> {\r\n                      (() => {\r\n                        const idx = predictResult.predicted_crop;\r\n                        const label = cropClasses[idx];\r\n                        return cropMap[label]||label;\r\n                      })()\r\n                    }</p>\r\n                    <h4>Girilen Değerler</h4>\r\n                    <p>pH: {predictResult.input.soil_ph}</p>\r\n                    <p>Yağış: {predictResult.input.rainfall_mm} mm</p>\r\n                    <p>Sıcaklık: {predictResult.input.temperature_celsius} °C</p>\r\n                  </div>\r\n                )}\r\n              </section>\r\n            </div>\r\n          </>\r\n        }/>\r\n\r\n        <Route path=\"/about\" element={<About/>}/>\r\n      </Routes>\r\n\r\n      <footer>\r\n        <p>Hadoop · Spark · Flask &amp; React Tarım Tahmin © 2025</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}